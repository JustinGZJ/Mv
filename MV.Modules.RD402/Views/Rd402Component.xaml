<TabItem x:Class="Mv.Modules.RD402.Views.Rd402Component"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:local="clr-namespace:Mv.Modules.RD402.Views"
         xmlns:prism="http://prismlibrary.com/"
         prism:ViewModelLocator.AutoWireViewModel="True"
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         xmlns:viewModels="clr-namespace:Mv.Modules.RD402.ViewModels"
         xmlns:validaterule="clr-namespace:Mv.Modules.RD402.Valications"
         xmlns:controls="clr-namespace:Mv.Controls.Controls;assembly=MV.Controls"
         mc:Ignorable="d"
         xmlns:rs="clr-namespace:Mv.Modules.RD402.Converters"
         d:DataContext="{d:DesignInstance viewModels:Rd402ComponentViewModel}"
         xmlns:i18N="clr-namespace:Mv.Core.I18n;assembly=MV.Core"
         xmlns:resx="clr-namespace:Mv.Modules.RD402.I18n"
        i18N:Translation.ResourceManager="{x:Static resx:lang.ResourceManager}"
         d:DesignHeight="450" d:DesignWidth="800">
    <TabItem.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MV.Controls;component/Styles/Mv.Animations.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MV.Controls;component/Styles/Mv.Brushes.Navy.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MV.Controls;component/Styles/Mv.Styles.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MV.UI;component/Converters/Mv.Converters.xaml"/>
                <ResourceDictionary>
                    <rs:FactoryVisiableConverter TargetFactory="信维" x:Key="xinweiVisibale"/>
                    <rs:FactoryVisiableConverter TargetFactory="ICT" x:Key="ictVisibale"/>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </TabItem.Resources>
    <TabItem.Header>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="2" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <materialDesign:PackIcon Kind="StackExchange" Foreground="{StaticResource LightGreyBackgroundBrush}"
                                     HorizontalAlignment="Center" Height="22" Width="22" />
            <TextBlock Grid.Row="2" Text="{i18N:Loc Exchange}" HorizontalAlignment="Center"
                       Foreground="{StaticResource LightGreyBackgroundBrush}" FontSize="10" />
        </Grid>
    </TabItem.Header>

    <Grid Style="{StaticResource FloatInRightToLeftStyle}">
        <Grid Grid.Row="0" Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="20" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle Height="40" Width="40" RadiusX="4" RadiusY="4">

                </Rectangle>
                <TextBlock Grid.Column="2" VerticalAlignment="Center"
                           Text="{i18N:Loc Exchange}" FontWeight="Bold" FontSize="28"
                           Foreground="{StaticResource PrimaryHueMidBrush}" />
            </Grid>
            <GroupBox Grid.Row="2" Header="Codes">
                <ItemsControl ItemsSource="{Binding PLCCodes}"></ItemsControl>
            </GroupBox>
            <GroupBox Grid.Row="4">
                <GroupBox.Header>
                    <Grid Background="{DynamicResource PrimaryHueMidBrush}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" Text="{i18N:Loc PLC}">
                        </TextBlock>
                        <controls:SimpleLed Grid.Column="1" State="{Binding IsConnected}" />
                    </Grid>
                </GroupBox.Header>
                <TabControl>
                    <TabItem Header="{i18N:Loc Inputs}">
                        <ItemsControl ItemsSource="{Binding Obs}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <controls:SimpleLed State="{Binding Value, Mode=OneWay}" Margin="8 8"
                                                        OnColor="{DynamicResource PrimaryHueMidBrush}"
                                                        OffColor="LightGray" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </TabItem>
                    <TabItem Header="{i18N:Loc Outputs}">
                        <TabItem.Resources>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource SimpleLedToggleButton}">
                                <Setter Property="Margin" Value="10" />
                            </Style>
                        </TabItem.Resources>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="0"
                                          IsChecked="{Binding Outs[0].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="1"
                                          IsChecked="{Binding Outs[1].Value,Mode=OneWay }" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="2"
                                          IsChecked="{Binding Outs[2].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="3"
                                          IsChecked="{Binding Outs[3].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="4"
                                          IsChecked="{Binding Outs[4].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="5"
                                          IsChecked="{Binding Outs[5].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="6"
                                          IsChecked="{Binding Outs[6].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="7"
                                          IsChecked="{Binding Outs[7].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="8"
                                          IsChecked="{Binding Outs[8].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="9"
                                          IsChecked="{Binding Outs[9].Value,Mode=OneWay }" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="10"
                                          IsChecked="{Binding Outs[10].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="11"
                                          IsChecked="{Binding Outs[11].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="12"
                                          IsChecked="{Binding Outs[12].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="13"
                                          IsChecked="{Binding Outs[13].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="14"
                                          IsChecked="{Binding Outs[14].Value,Mode=OneWay}" />
                            <ToggleButton Command="{Binding SetOutputCommand}" CommandParameter="15"
                                          IsChecked="{Binding Outs[15].Value,Mode=OneWay}" />
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </GroupBox>
            <GroupBox Header="Messages" Grid.Row="6">
                <ListBox controls:ListScrollToEnd.IsScrollToEnd="True" x:Name="Msgs" ItemsSource="{Binding Msg}"></ListBox>
            </GroupBox>
        </Grid>

    </Grid>
</TabItem>